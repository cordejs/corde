// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`testing toBeArray should return false for {} 1`] = `
Object {
  "message": "    
    expect([32mexpected[39m).toBeArray()
    
    [1mexpected[22m should be an [32marray[39m.
    got: [31mobject[39m
",
  "pass": false,
  "trace": "    at toBeArray tests\\\\expect\\\\matchers\\\\toBeArray.test.ts:36:55",
}
`;

exports[`testing toBeArray should return false for 1 1`] = `
Object {
  "message": "    
    expect([32mexpected[39m).toBeArray()
    
    [1mexpected[22m should be an [32marray[39m.
    got: [31mnumber[39m
",
  "pass": false,
  "trace": "    at toBeArray tests\\\\expect\\\\matchers\\\\toBeArray.test.ts:36:55",
}
`;

exports[`testing toBeArray should return false for Symbol() 1`] = `
Object {
  "message": "    
    expect([32mexpected[39m).toBeArray()
    
    [1mexpected[22m should be an [32marray[39m.
    got: [31msymbol[39m
",
  "pass": false,
  "trace": "    at toBeArray tests\\\\expect\\\\matchers\\\\toBeArray.test.ts:36:55",
}
`;

exports[`testing toBeArray should return false for aa 1`] = `
Object {
  "message": "    
    expect([32mexpected[39m).toBeArray()
    
    [1mexpected[22m should be an [32marray[39m.
    got: [31mstring[39m
",
  "pass": false,
  "trace": "    at toBeArray tests\\\\expect\\\\matchers\\\\toBeArray.test.ts:36:55",
}
`;

exports[`testing toBeArray should return false for array with isNot true 1`] = `
Object {
  "message": "    
    expect([32mexpected[39m).not.toBeArray()
    
    [1mexpected[22m should not be an [32marray[39m.
    got: [31marray[39m
",
  "pass": false,
  "trace": "    at toBeArray Object.<anonymous> (tests\\\\expect\\\\matchers\\\\toBeArray.test.ts:30:53)",
}
`;

exports[`testing toBeArray should return false for asymmetricMatcher of any value that is not array 1`] = `
Object {
  "message": "    
    expect([32mexpected[39m).toBeArray()
    
    [1mexpected[22m should be an [32marray[39m.
    got: [31many(Number)[39m
",
  "pass": false,
  "trace": "    at toBeArray Object.<anonymous> (tests\\\\expect\\\\matchers\\\\toBeArray.test.ts:25:78)",
}
`;

exports[`testing toBeArray should return false for null 1`] = `
Object {
  "message": "    
    expect([32mexpected[39m).toBeArray()
    
    [1mexpected[22m should be an [32marray[39m.
    got: [31mnull[39m
",
  "pass": false,
  "trace": "    at toBeArray tests\\\\expect\\\\matchers\\\\toBeArray.test.ts:36:55",
}
`;

exports[`testing toBeArray should return false for undefined 1`] = `
Object {
  "message": "    
    expect([32mexpected[39m).toBeArray()
    
    [1mexpected[22m should be an [32marray[39m.
    got: [31mundefined[39m
",
  "pass": false,
  "trace": "    at toBeArray tests\\\\expect\\\\matchers\\\\toBeArray.test.ts:36:55",
}
`;
