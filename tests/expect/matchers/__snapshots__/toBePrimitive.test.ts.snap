// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`testing toBePrimitive should return false for () => {} (isNot false) 1`] = `
Object {
  "message": "    
    expected should be primitive expected (string | bigint | number | boolean).
    got: function
",
  "pass": false,
}
`;

exports[`testing toBePrimitive should return false for [] (isNot false) 1`] = `
Object {
  "message": "    
    expected should be primitive expected (string | bigint | number | boolean).
    got: array
",
  "pass": false,
}
`;

exports[`testing toBePrimitive should return false for {} (isNot false) 1`] = `
Object {
  "message": "    
    expected should be primitive expected (string | bigint | number | boolean).
    got: object
",
  "pass": false,
}
`;

exports[`testing toBePrimitive should return false for 1 (isNot true) 1`] = `
Object {
  "message": "    
    expected should not be primitive expected (string | bigint | number | boolean).
    got: string
",
  "pass": false,
}
`;

exports[`testing toBePrimitive should return false for 1 (isNot true) 2`] = `
Object {
  "message": "    
    expected should not be primitive expected (string | bigint | number | boolean).
    got: number
",
  "pass": false,
}
`;

exports[`testing toBePrimitive should return false for 9007199254740991n (isNot true) 1`] = `
Object {
  "message": "    
    expected should not be primitive expected (string | bigint | number | boolean).
    got: bigint
",
  "pass": false,
}
`;

exports[`testing toBePrimitive should return false for Symbol() (isNot false) 1`] = `
Object {
  "message": "    
    expected should be primitive expected (string | bigint | number | boolean).
    got: symbol
",
  "pass": false,
}
`;

exports[`testing toBePrimitive should return false for any(Array) (isNot false) 1`] = `
Object {
  "message": "    
    expected should be primitive expected (string | bigint | number | boolean).
    got: any(Array)
",
  "pass": false,
}
`;

exports[`testing toBePrimitive should return false for any(Bigint) (isNot true) 1`] = `
Object {
  "message": "    
    expected should not be primitive expected (string | bigint | number | boolean).
    got: any(Bigint)
",
  "pass": false,
}
`;

exports[`testing toBePrimitive should return false for any(Boolean) (isNot true) 1`] = `
Object {
  "message": "    
    expected should not be primitive expected (string | bigint | number | boolean).
    got: any(Boolean)
",
  "pass": false,
}
`;

exports[`testing toBePrimitive should return false for any(Function) (isNot false) 1`] = `
Object {
  "message": "    
    expected should be primitive expected (string | bigint | number | boolean).
    got: any(Function)
",
  "pass": false,
}
`;

exports[`testing toBePrimitive should return false for any(Number) (isNot true) 1`] = `
Object {
  "message": "    
    expected should not be primitive expected (string | bigint | number | boolean).
    got: any(Number)
",
  "pass": false,
}
`;

exports[`testing toBePrimitive should return false for any(Object) (isNot false) 1`] = `
Object {
  "message": "    
    expected should be primitive expected (string | bigint | number | boolean).
    got: any(Object)
",
  "pass": false,
}
`;

exports[`testing toBePrimitive should return false for any(String) (isNot true) 1`] = `
Object {
  "message": "    
    expected should not be primitive expected (string | bigint | number | boolean).
    got: any(String)
",
  "pass": false,
}
`;

exports[`testing toBePrimitive should return false for any(Symbol) (isNot false) 1`] = `
Object {
  "message": "    
    expected should be primitive expected (string | bigint | number | boolean).
    got: any(Symbol)
",
  "pass": false,
}
`;

exports[`testing toBePrimitive should return false for false (isNot true) 1`] = `
Object {
  "message": "    
    expected should not be primitive expected (string | bigint | number | boolean).
    got: boolean
",
  "pass": false,
}
`;

exports[`testing toBePrimitive should return false for null (isNot false) 1`] = `
Object {
  "message": "    
    expected should be primitive expected (string | bigint | number | boolean).
    got: null
",
  "pass": false,
}
`;

exports[`testing toBePrimitive should return false for true (isNot true) 1`] = `
Object {
  "message": "    
    expected should not be primitive expected (string | bigint | number | boolean).
    got: boolean
",
  "pass": false,
}
`;

exports[`testing toBePrimitive should return false for undefined (isNot false) 1`] = `
Object {
  "message": "    
    expected should be primitive expected (string | bigint | number | boolean).
    got: undefined
",
  "pass": false,
}
`;
