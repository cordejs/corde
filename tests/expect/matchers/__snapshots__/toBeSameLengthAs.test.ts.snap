// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`testing toBeSameLengthAs  should return true for  and 1 (isNot false) 1`] = `
"    
    expect([32mexpected[39m).toBeSameLengthAs([31mvalue[39m)
    
    [1mexpected[22m and [1mvalue[22m should both be a string.
    got: [32mstring[39m and [31mnumber[39m respectively
"
`;

exports[`testing toBeSameLengthAs  should return true for  and any (isNot true) 1`] = `
"    
    expect([32mexpected[39m).not.toBeSameLengthAs([31mvalue[39m)
    
    [1mexpected[22m and [1mvalue[22m should both be a string.
    got: [32mstring[39m and [31many[39m respectively
"
`;

exports[`testing toBeSameLengthAs  should return true for  and any(Number) (isNot false) 1`] = `
"    
    expect([32mexpected[39m).toBeSameLengthAs([31mvalue[39m)
    
    [1mexpected[22m and [1mvalue[22m should both be a string.
    got: [32mstring[39m and [31many(Number)[39m respectively
"
`;

exports[`testing toBeSameLengthAs  should return true for  and any(String) (isNot true) 1`] = `
"    
    expect([32mexpected[39m).not.toBeSameLengthAs([31mvalue[39m)
    
    [1mexpected[22m and [1mvalue[22m should both be a string.
    got: [32mstring[39m and [31many(String)[39m respectively
"
`;

exports[`testing toBeSameLengthAs  should return true for 1 and 1 (isNot false) 1`] = `
"    
    expect([32mexpected[39m).toBeSameLengthAs([31mvalue[39m)
    
    [1mexpected[22m and [1mvalue[22m should both be a string.
    got: [32mnumber[39m and [31mnumber[39m respectively
"
`;

exports[`testing toBeSameLengthAs  should return true for 11 and  (isNot false) 1`] = `
"    
    expect([32mexpected[39m).toBeSameLengthAs([31mvalue[39m)
    
    expected '[32m11[39m' to have same length of ''
"
`;

exports[`testing toBeSameLengthAs  should return true for 11 and 11 (isNot true) 1`] = `
"    
    expect([32mexpected[39m).not.toBeSameLengthAs([31mvalue[39m)
    
    expected '[32m11[39m' to not have same length of '[31m11[39m'
"
`;

exports[`testing toBeSameLengthAs  should return true for 1111 and 1111 (isNot true) 1`] = `
"    
    expect([32mexpected[39m).not.toBeSameLengthAs([31mvalue[39m)
    
    expected '[32m1111[39m' to not have same length of '[31m1111[39m'
"
`;

exports[`testing toBeSameLengthAs  should return true for any and 1 (isNot true) 1`] = `
"    
    expect([32mexpected[39m).not.toBeSameLengthAs([31mvalue[39m)
    
    [1mexpected[22m and [1mvalue[22m should both be a string.
    got: [32many[39m and [31mstring[39m respectively
"
`;

exports[`testing toBeSameLengthAs  should return true for any(String) and 1 (isNot true) 1`] = `
"    
    expect([32mexpected[39m).not.toBeSameLengthAs([31mvalue[39m)
    
    [1mexpected[22m and [1mvalue[22m should both be a string.
    got: [32many(String)[39m and [31mstring[39m respectively
"
`;

exports[`testing toBeSameLengthAs  should return true for any(String) and any(String) (isNot true) 1`] = `
"    
    expect([32mexpected[39m).not.toBeSameLengthAs([31mvalue[39m)
    
    [1mexpected[22m and [1mvalue[22m should both be a string.
    got: [32many(String)[39m and [31many(String)[39m respectively
"
`;
