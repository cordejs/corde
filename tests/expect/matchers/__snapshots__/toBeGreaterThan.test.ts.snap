// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`testing toBeGreaterThan should fail due to expected be bigger than received (isNot true) 1`] = `
Object {
  "message": "expect([32mexpected[39m).not.toBeGreaterThan([31mreceived[39m)
result: 4 <= 2.",
  "pass": false,
}
`;

exports[`testing toBeGreaterThan should fail due to expected be equal than received 1`] = `
Object {
  "message": "expect([32mexpected[39m).toBeGreaterThan([31mreceived[39m)
result: 1 > 1.",
  "pass": false,
}
`;

exports[`testing toBeGreaterThan should fail due to expected be less than received 1`] = `
Object {
  "message": "expect([32mexpected[39m).toBeGreaterThan([31mreceived[39m)
result: 1 > 2.",
  "pass": false,
}
`;

exports[`testing toBeGreaterThan should return false for 'expected' not to be a number 1`] = `
Object {
  "message": "value is not a number.
received: '[31mstring[39m'",
  "pass": false,
}
`;

exports[`testing toBeGreaterThan should return false for 'expected' not to be a number 2`] = `
Object {
  "message": "value is not a number.
received: '[31mstring[39m'",
  "pass": false,
}
`;

exports[`testing toBeGreaterThan should return false for 'expected' not to be a number 3`] = `
Object {
  "message": "value is not a number.
received: '[31mboolean[39m'",
  "pass": false,
}
`;

exports[`testing toBeGreaterThan should return false for 'expected' not to be a number 4`] = `
Object {
  "message": "value is not a number.
received: '[31mboolean[39m'",
  "pass": false,
}
`;

exports[`testing toBeGreaterThan should return false for 'expected' not to be a number 5`] = `
Object {
  "message": "value is not a number.
received: '[31marray[39m'",
  "pass": false,
}
`;

exports[`testing toBeGreaterThan should return false for 'received' not to be a number 1`] = `
Object {
  "message": "received is not a number.
received: '[31mstring[39m'",
  "pass": false,
}
`;

exports[`testing toBeGreaterThan should return false for 'received' not to be a number 2`] = `
Object {
  "message": "received is not a number.
received: '[31mstring[39m'",
  "pass": false,
}
`;

exports[`testing toBeGreaterThan should return false for 'received' not to be a number 3`] = `
Object {
  "message": "received is not a number.
received: '[31mboolean[39m'",
  "pass": false,
}
`;

exports[`testing toBeGreaterThan should return false for 'received' not to be a number 4`] = `
Object {
  "message": "received is not a number.
received: '[31mboolean[39m'",
  "pass": false,
}
`;

exports[`testing toBeGreaterThan should return false for 'received' not to be a number 5`] = `
Object {
  "message": "received is not a number.
received: '[31marray[39m'",
  "pass": false,
}
`;
