// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`testing toBeShorterThan  should return true for  and 1 (isNot false) 1`] = `
"    
    expect([32mexpected[39m).toBeShorterThan([31mvalue[39m)
    
    expected '' to be shorter than '[31m1[39m'
"
`;

exports[`testing toBeShorterThan  should return true for  and any (isNot true) 1`] = `
"    
    expect([32mexpected[39m).not.toBeShorterThan([31mvalue[39m)
    
    expected '' to not be shorter than '[31many[39m'
"
`;

exports[`testing toBeShorterThan  should return true for  and any(Number) (isNot false) 1`] = `
"    
    expect([32mexpected[39m).toBeShorterThan([31mvalue[39m)
    
    expected '' to be shorter than '[31many(Number)[39m'
"
`;

exports[`testing toBeShorterThan  should return true for  and any(String) (isNot true) 1`] = `
"    
    expect([32mexpected[39m).not.toBeShorterThan([31mvalue[39m)
    
    expected '' to not be shorter than '[31many(String)[39m'
"
`;

exports[`testing toBeShorterThan  should return true for 1 and 1 (isNot false) 1`] = `
"    
    expect([32mexpected[39m).toBeShorterThan([31mvalue[39m)
    
    [1mexpected[22m and [1mvalue[22m should both be a string.
    got: [32mnumber[39m and [31mnumber[39m respectively
"
`;

exports[`testing toBeShorterThan  should return true for 1 and 11 (isNot true) 1`] = `
"    
    expect([32mexpected[39m).not.toBeShorterThan([31mvalue[39m)
    
    expected '[32m1[39m' to not be shorter than '[31m11[39m'
"
`;

exports[`testing toBeShorterThan  should return true for 11 and  (isNot false) 1`] = `
"    
    expect([32mexpected[39m).toBeShorterThan([31mvalue[39m)
    
    expected '[32m11[39m' to be shorter than ''
"
`;

exports[`testing toBeShorterThan  should return true for 111 and 1111 (isNot true) 1`] = `
"    
    expect([32mexpected[39m).not.toBeShorterThan([31mvalue[39m)
    
    expected '[32m111[39m' to not be shorter than '[31m1111[39m'
"
`;

exports[`testing toBeShorterThan  should return true for any and 1 (isNot true) 1`] = `
"    
    expect([32mexpected[39m).not.toBeShorterThan([31mvalue[39m)
    
    [1mexpected[22m and [1mvalue[22m should both be a string.
    got: [32many[39m and [31mstring[39m respectively
"
`;

exports[`testing toBeShorterThan  should return true for any(String) and 1 (isNot true) 1`] = `
"    
    expect([32mexpected[39m).not.toBeShorterThan([31mvalue[39m)
    
    [1mexpected[22m and [1mvalue[22m should both be a string.
    got: [32many(String)[39m and [31mstring[39m respectively
"
`;

exports[`testing toBeShorterThan  should return true for any(String) and any(String) (isNot true) 1`] = `
"    
    expect([32mexpected[39m).not.toBeShorterThan([31mvalue[39m)
    
    [1mexpected[22m and [1mvalue[22m should both be a string.
    got: [32many(String)[39m and [31many(String)[39m respectively
"
`;
