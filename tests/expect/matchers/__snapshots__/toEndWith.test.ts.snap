// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`testing toEndWith  should return true for  and 1 (isNot false) 1`] = `
"    
    expect([32mexpected[39m).toEndWith([31mvalue[39m)
    
    expected '' to end with '[31m1[39m'
"
`;

exports[`testing toEndWith  should return true for  and any(Number) (isNot false) 1`] = `
"    
    expect([32mexpected[39m).toEndWith([31mvalue[39m)
    
    expected '' to end with '[31many(Number)[39m'
"
`;

exports[`testing toEndWith  should return true for 1 and 1 (isNot false) 1`] = `
"    
    expect([32mexpected[39m).toEndWith([31mvalue[39m)
    
    [1mexpected[22m and [1mvalue[22m should both be a string.
    got: [32mnumber[39m and [31mnumber[39m respectively
"
`;

exports[`testing toEndWith  should return true for 111 and 1 (isNot true) 1`] = `
"    
    expect([32mexpected[39m).not.toEndWith([31mvalue[39m)
    
    expected '[32m111[39m' to not end with '[31m1[39m'
"
`;

exports[`testing toEndWith  should return true for abcdefgh and fgh (isNot true) 1`] = `
"    
    expect([32mexpected[39m).not.toEndWith([31mvalue[39m)
    
    expected '[32mabcdefgh[39m' to not end with '[31mfgh[39m'
"
`;

exports[`testing toEndWith  should return true for any and 1 (isNot true) 1`] = `
"    
    expect([32mexpected[39m).not.toEndWith([31mvalue[39m)
    
    [1mexpected[22m and [1mvalue[22m should both be a string.
    got: [32many[39m and [31mstring[39m respectively
"
`;

exports[`testing toEndWith  should return true for any(String) and 1 (isNot true) 1`] = `
"    
    expect([32mexpected[39m).not.toEndWith([31mvalue[39m)
    
    [1mexpected[22m and [1mvalue[22m should both be a string.
    got: [32many(String)[39m and [31mstring[39m respectively
"
`;

exports[`testing toEndWith  should return true for any(String) and any(String) (isNot true) 1`] = `
"    
    expect([32mexpected[39m).not.toEndWith([31mvalue[39m)
    
    [1mexpected[22m and [1mvalue[22m should both be a string.
    got: [32many(String)[39m and [31many(String)[39m respectively
"
`;

exports[`testing toEndWith  should return true for foo and any (isNot true) 1`] = `
"    
    expect([32mexpected[39m).not.toEndWith([31mvalue[39m)
    
    expected '[32mfoo[39m' to not end with '[31many[39m'
"
`;

exports[`testing toEndWith  should return true for foo and any(String) (isNot true) 1`] = `
"    
    expect([32mexpected[39m).not.toEndWith([31mvalue[39m)
    
    expected '[32mfoo[39m' to not end with '[31many(String)[39m'
"
`;

exports[`testing toEndWith  should return true for foo and bar (isNot false) 1`] = `
"    
    expect([32mexpected[39m).toEndWith([31mvalue[39m)
    
    expected '[32mfoo[39m' to end with '[31mbar[39m'
"
`;
