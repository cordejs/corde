// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should get report for multiple files 1`] = `
"
[42m[30m PASS [39m[49m   file 1   [36m10ms[39m
   [32m[32m‚úî [39m[32m test closure 1[39m   [36m10ms[39m
[42m[30m PASS [39m[49m   file 2   [36m10ms[39m
   [32m[32m‚úî [39m[32m test closure 2[39m   [36m10ms[39m
[42m[30m PASS [39m[49m   file 3   [36m10ms[39m
   [32m[32m‚úî [39m[32m test closure 3[39m   [36m10ms[39m"
`;

exports[`should get report for multiple files: without ANSI Colors 1`] = `
"
 PASS    file 1   10ms
   ‚úî  test closure 1   10ms
 PASS    file 2   10ms
   ‚úî  test closure 2   10ms
 PASS    file 3   10ms
   ‚úî  test closure 3   10ms"
`;

exports[`should get report for multiple tests inside a group 1`] = `
"
[42m[30m PASS [39m[49m   test file   [36m10ms[39m
   [32m[32m‚úî [39m[32m test closure[39m   [36m10ms[39m
   [32m[32m‚úî [39m[32m test closure[39m   [36m10ms[39m
   [32m[32m‚úî [39m[32m test closure[39m   [36m10ms[39m"
`;

exports[`should get report for multiple tests inside a group and failed tests 1`] = `
"
[41m[30m FAIL [39m[49m   [31mtest file[39m   [36m10ms[39m
   [32m[32m‚úî [39m[32m test closure[39m   [36m10ms[39m
   [32m[32m‚úî [39m[32m test closure[39m   [36m10ms[39m
   [32m[32m‚úî [39m[32m test closure[39m   [36m10ms[39m
   [31m[31mx[39m[31m test closure[39m   [36m10ms[39m
    
    Tip: toEqual asserts the value of properties. To compare their identity use [1mtoBe[22m
    
    expect([32mexpected[39m).not.toEqual([31mreceived[39m)
    
    expect: [32m1[39m !== [31m1[39m

    at toEqual tests\\\\core\\\\testExecutor.test.ts:172:35
    at _internalTest (src\\\\closures\\\\test.ts:34:13)
    at src\\\\closures\\\\test.ts:44:17
"
`;

exports[`should get report for single group and a empty test 1`] = `
"
[42m[30m PASS [39m[49m   test file   [36m10ms[39m
   [93m ‚óè test closure (empty)[39m   [36m10ms[39m"
`;

exports[`should get report for splited groups 1`] = `
"
[41m[30m FAIL [39m[49m   [31mtest file[39m   [36m10ms[39m
   [32m[32m‚úî [39m[32m test closure 1[39m   [36m10ms[39m
   [32m[32m‚úî [39m[32m test closure 2[39m   [36m10ms[39m
   [32m[32m‚úî [39m[32m test closure 3[39m   [36m10ms[39m
   [31m[31mx[39m[31m test closure 4[39m   [36m10ms[39m
    
    Tip: toEqual asserts the value of properties. To compare their identity use [1mtoBe[22m
    
    expect([32mexpected[39m).not.toEqual([31mreceived[39m)
    
    expect: [32m1[39m !== [31m1[39m

    at toEqual tests\\\\core\\\\testExecutor.test.ts:267:35
    at _internalTest (src\\\\closures\\\\test.ts:34:13)
    at src\\\\closures\\\\test.ts:44:17

   [32m[32m‚úî [39m[32m test closure 5[39m   [36m10ms[39m
   [32m[32m‚úî [39m[32m test closure 6[39m   [36m10ms[39m
   [32m[32m‚úî [39m[32m test closure 7[39m   [36m10ms[39m
   [31m[31mx[39m[31m test closure 8[39m   [36m10ms[39m
    
    Tip: toEqual asserts the value of properties. To compare their identity use [1mtoBe[22m
    
    expect([32mexpected[39m).not.toEqual([31mreceived[39m)
    
    expect: [32m1[39m !== [31m1[39m

    at toEqual tests\\\\core\\\\testExecutor.test.ts:281:35
    at _internalTest (src\\\\closures\\\\test.ts:34:13)
    at src\\\\closures\\\\test.ts:44:17

   [32m[32m‚úî [39m[32m test closure 9[39m   [36m10ms[39m
   [32m[32m‚úî [39m[32m test closure 10[39m   [36m10ms[39m
   [32m[32m‚úî [39m[32m test closure 11[39m   [36m10ms[39m
   [31m[31mx[39m[31m test closure 12[39m   [36m10ms[39m
    
    Tip: toEqual asserts the value of properties. To compare their identity use [1mtoBe[22m
    
    expect([32mexpected[39m).not.toEqual([31mreceived[39m)
    
    expect: [32m1[39m !== [31m1[39m

    at toEqual tests\\\\core\\\\testExecutor.test.ts:295:35
    at _internalTest (src\\\\closures\\\\test.ts:34:13)
    at src\\\\closures\\\\test.ts:44:17
"
`;

exports[`should get report for subgroups 1`] = `
"
[42m[30m PASS [39m[49m   test file   [36m10ms[39m
   [32m[32m‚úî [39m[32m test[39m   [36m10ms[39m"
`;

exports[`should get report for subtests 1`] = `
"
[42m[30m PASS [39m[49m   test file   [36m10ms[39m
   [93m ‚óè t1 (empty)[39m   [36m10ms[39m
   [93m ‚óè t2 (empty)[39m   [36m10ms[39m
   [93m ‚óè t3 (empty)[39m   [36m10ms[39m
   [93m ‚óè t4 (empty)[39m   [36m10ms[39m
   [93m ‚óè t5 (empty)[39m   [36m10ms[39m
   [93m ‚óè t6 (empty)[39m   [36m10ms[39m
   [32m[32m‚úî [39m[32m t7[39m   [36m10ms[39m"
`;

exports[`should print a report for a group with a test with multiple expects 1`] = `
"
[42m[30m PASS [39m[49m   test file   [36m10ms[39m
   [32m[32m‚úî [39m[32m test closure[39m   [36m10ms[39m"
`;

exports[`should print report for 1 test file, 1 test closure and 1 test function 1`] = `
"
[42m[30m PASS [39m[49m   test file   [36m10ms[39m
   [32m[32m‚úî [39m[32m test closure[39m   [36m10ms[39m"
`;

exports[`should print report for 1 test file, 1 test closure and 2 test function 1`] = `
"
[42m[30m PASS [39m[49m   test file   [36m10ms[39m
   [32m[32m‚úî [39m[32m test closure[39m   [36m10ms[39m"
`;

exports[`should print report for single group and a single test 1`] = `
"
[41m[30m FAIL [39m[49m   [31mtest file[39m   [36m10ms[39m
   [31m[31mx[39m[31m test closure[39m   [36m10ms[39m
    
    Tip: toEqual asserts the value of properties. To compare their identity use [1mtoBe[22m
    
    expect([32mexpected[39m).not.toEqual([31mreceived[39m)
    
    expect: [32m1[39m !== [31m1[39m

    at toEqual tests\\\\core\\\\testExecutor.test.ts:93:35
    at _internalTest (src\\\\closures\\\\test.ts:34:13)
    at src\\\\closures\\\\test.ts:44:17
"
`;
