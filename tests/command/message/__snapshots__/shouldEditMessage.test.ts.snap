// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`testing shouldEditMessage function should fail due to message was not edited by the bot (no messageIdentifier as object with content) 1`] = `
Object {
  "message": "    
    expected: testing bot to edit the message of content \\"message test\\"
    received: message was not edited
",
  "pass": false,
  "testName": "shouldEditMessage",
  "trace": "    at shouldEditMessage Object.<anonymous> (tests\\\\command\\\\message\\\\shouldEditMessage.test.ts:63:37)",
}
`;

exports[`testing shouldEditMessage function should fail due to message was not edited by the bot (no messageIdentifier as object with id) 1`] = `
Object {
  "message": "    
    expected: testing bot to edit the message of id 123
    received: message was not edited
",
  "pass": false,
  "testName": "shouldEditMessage",
  "trace": "    at shouldEditMessage Object.<anonymous> (tests\\\\command\\\\message\\\\shouldEditMessage.test.ts:56:37)",
}
`;

exports[`testing shouldEditMessage function should fail due to message was not edited by the bot (no messageIdentifier as string) 1`] = `
Object {
  "message": "    
    expected: testing bot to edit the message of id 123
    received: message was not edited
",
  "pass": false,
  "testName": "shouldEditMessage",
  "trace": "    at shouldEditMessage Object.<anonymous> (tests\\\\command\\\\message\\\\shouldEditMessage.test.ts:51:37)",
}
`;

exports[`testing shouldEditMessage function should fail due to message was not edited by the bot (no messageIdentifier) 1`] = `
Object {
  "message": "    
    expected: testing bot to edit the last message sent
    received: message was not edited
",
  "pass": false,
  "testName": "shouldEditMessage",
  "trace": "    at shouldEditMessage Object.<anonymous> (tests\\\\command\\\\message\\\\shouldEditMessage.test.ts:46:37)
    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
}
`;

exports[`testing shouldEditMessage function should get fail test due to bot returned different messages (both embed) 1`] = `
Object {
  "message": "    
    [32m- Expected  - 13[39m
    [31m+ Received  +  0[39m
    
    [2m  Object {[22m
    [32m-   \\"author\\": Object {[39m
    [32m-     \\"iconURL\\": \\"https://i.imgur.com/wSTFkRM.png\\",[39m
    [32m-     \\"name\\": \\"Some name\\",[39m
    [32m-     \\"url\\": \\"https://discord.js.org\\",[39m
    [32m-   },[39m
    [32m-   \\"color\\": 2123412,[39m
    [32m-   \\"description\\": \\"Some description here\\",[39m
    [2m    \\"fields\\": Array [[22m
    [2m      Object {[22m
    [2m        \\"inline\\": false,[22m
    [2m        \\"name\\": \\"Regular field title\\",[22m
    [2m        \\"value\\": \\"Some value here\\",[22m
    [2m      },[22m
    [2m      Object {[22m
    [2m        \\"inline\\": false,[22m
    [2m        \\"name\\": \\"â€‹\\",[22m
    [2m        \\"value\\": \\"â€‹\\",[22m
    [2m      },[22m
    [2m      Object {[22m
    [2m        \\"inline\\": true,[22m
    [2m        \\"name\\": \\"Inline field title\\",[22m
    [2m        \\"value\\": \\"Some value here\\",[22m
    [2m      },[22m
    [2m      Object {[22m
    [2m        \\"inline\\": true,[22m
    [2m        \\"name\\": \\"Inline field title\\",[22m
    [2m        \\"value\\": \\"Some value here\\",[22m
    [2m      },[22m
    [2m    ],[22m
    [32m-   \\"files\\": Array [[39m
    [32m-     \\"https://i.imgur.com/wSTFkRM.png\\",[39m
    [32m-   ],[39m
    [32m-   \\"thumbnailUrl\\": \\"https://i.imgur.com/wSTFkRM.png\\",[39m
    [32m-   \\"title\\": \\"Some title\\",[39m
    [32m-   \\"url\\": \\"https://discord.js.org/\\",[39m
    [2m  }[22m
",
  "pass": false,
  "testName": "shouldEditMessage",
  "trace": "    at shouldEditMessage Object.<anonymous> (tests\\\\command\\\\message\\\\shouldEditMessage.test.ts:123:37)",
}
`;

exports[`testing shouldEditMessage function should get fail test due to bot returned different messages (expect embed and returned primitive) 1`] = `
Object {
  "message": "    
    expected: Object {
      \\"author\\": Object {
        \\"iconURL\\": \\"https://i.imgur.com/wSTFkRM.png\\",
        \\"name\\": \\"Some name\\",
        \\"url\\": \\"https://discord.js.org\\",
      },
      \\"color\\": 2123412,
      \\"description\\": \\"Some description here\\",
      \\"fields\\": Array [
        Object {
          \\"inline\\": false,
          \\"name\\": \\"Regular field title\\",
          \\"value\\": \\"Some value here\\",
        },
        Object {
          \\"inline\\": false,
          \\"name\\": \\"â€‹\\",
          \\"value\\": \\"â€‹\\",
        },
        Object {
          \\"inline\\": true,
          \\"name\\": \\"Inline field title\\",
          \\"value\\": \\"Some value here\\",
        },
        Object {
          \\"inline\\": true,
          \\"name\\": \\"Inline field title\\",
          \\"value\\": \\"Some value here\\",
        },
      ],
      \\"files\\": Array [
        \\"https://i.imgur.com/wSTFkRM.png\\",
      ],
      \\"thumbnailUrl\\": \\"https://i.imgur.com/wSTFkRM.png\\",
      \\"title\\": \\"Some title\\",
      \\"url\\": \\"https://discord.js.org/\\",
    }
    received: 'this is the message content'
",
  "pass": false,
  "testName": "shouldEditMessage",
  "trace": "    at shouldEditMessage Object.<anonymous> (tests\\\\command\\\\message\\\\shouldEditMessage.test.ts:148:37)",
}
`;

exports[`testing shouldEditMessage function should get fail test due to bot returned different messages (expect primitive and returned embed) 1`] = `
Object {
  "message": "    
    expected: 'expect value'
    received: Object {
      \\"author\\": Object {
        \\"iconURL\\": \\"https://i.imgur.com/wSTFkRM.png\\",
        \\"name\\": \\"Some name\\",
        \\"url\\": \\"https://discord.js.org\\",
      },
      \\"color\\": 2123412,
      \\"description\\": \\"Some description here\\",
      \\"fields\\": Array [
        Object {
          \\"inline\\": false,
          \\"name\\": \\"Regular field title\\",
          \\"value\\": \\"Some value here\\",
        },
        Object {
          \\"inline\\": false,
          \\"name\\": \\"â€‹\\",
          \\"value\\": \\"â€‹\\",
        },
        Object {
          \\"inline\\": true,
          \\"name\\": \\"Inline field title\\",
          \\"value\\": \\"Some value here\\",
        },
        Object {
          \\"inline\\": true,
          \\"name\\": \\"Inline field title\\",
          \\"value\\": \\"Some value here\\",
        },
      ],
      \\"files\\": Array [
        \\"https://i.imgur.com/wSTFkRM.png\\",
      ],
      \\"thumbnailUrl\\": \\"https://i.imgur.com/wSTFkRM.png\\",
      \\"title\\": \\"Some title\\",
      \\"url\\": \\"https://discord.js.org/\\",
    }
",
  "pass": false,
  "testName": "shouldEditMessage",
  "trace": "    at shouldEditMessage Object.<anonymous> (tests\\\\command\\\\message\\\\shouldEditMessage.test.ts:131:37)",
}
`;

exports[`testing shouldEditMessage function should get fail test due to bot returned different messages both primitive values 1`] = `
Object {
  "message": "    
    expected: 'expect value'
    received: 'this is the message content'
",
  "pass": false,
  "testName": "shouldEditMessage",
  "trace": "    at shouldEditMessage Object.<anonymous> (tests\\\\command\\\\message\\\\shouldEditMessage.test.ts:139:37)",
}
`;

exports[`testing shouldEditMessage function should get failed test due to bot returned equal messages (isNot true) 1`] = `
Object {
  "message": "    
    expected: message from bot be different from expectation
    received: both returned and expectation are equal
",
  "pass": false,
  "testName": "shouldEditMessage",
  "trace": "    at shouldEditMessage Object.<anonymous> (tests\\\\command\\\\message\\\\shouldEditMessage.test.ts:106:41)",
}
`;

exports[`testing shouldEditMessage function should get success test due to bot returned different messages (isNot true) 1`] = `
Object {
  "pass": true,
  "testName": "shouldEditMessage",
}
`;

exports[`testing shouldEditMessage function should get success test due to bot returned equal message 1`] = `
Object {
  "pass": true,
  "testName": "shouldEditMessage",
}
`;

exports[`testing shouldEditMessage function should get success test due to bot returned equal messages (string number) 1`] = `
Object {
  "pass": true,
  "testName": "shouldEditMessage",
}
`;

exports[`testing shouldEditMessage function should get success test due to bot returned equal messages (string type) 1`] = `
Object {
  "pass": true,
  "testName": "shouldEditMessage",
}
`;

exports[`testing shouldEditMessage function should get success test due to bot returned equal messages (type embed) 1`] = `
Object {
  "pass": true,
  "testName": "shouldEditMessage",
}
`;

exports[`testing shouldEditMessage function should get success test due to timeout but isNot = true 1`] = `
Object {
  "pass": true,
  "testName": "shouldEditMessage",
}
`;

exports[`testing shouldEditMessage function should return a failed test due to failure in message sending 1`] = `
Object {
  "message": "    
    can not send message to channel x
",
  "pass": false,
  "testName": "shouldEditMessage",
  "trace": "    at shouldEditMessage Object.<anonymous> (tests\\\\command\\\\message\\\\shouldEditMessage.test.ts:157:37)",
}
`;

exports[`testing shouldEditMessage function should return a failed test due to invalid parameter (null) 1`] = `
Object {
  "message": "    
    expected: expect value to be a primitive value (string, boolean, number) or an IMessageEmbed object
    received: null
",
  "pass": false,
  "testName": "shouldEditMessage",
}
`;

exports[`testing shouldEditMessage function should return a failed test due to invalid parameter (undefined) 1`] = `
Object {
  "message": "    
    expected: expect value to be a primitive value (string, boolean, number) or an IMessageEmbed object
    received: undefined
",
  "pass": false,
  "testName": "shouldEditMessage",
  "trace": "    at shouldEditMessage Object.<anonymous> (tests\\\\command\\\\message\\\\shouldEditMessage.test.ts:41:37)
    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
}
`;
