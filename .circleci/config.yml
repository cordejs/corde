version: 2.1

aliases:
  - &filter-ignore-gh-pages
    branches:
      ignore: gh-pages

references:
  x-workdir: &work-dir
    working_directory: ~/corde

  x-save-workspace: &persist-step
    persist_to_workspace:
      root: ~/corde
      paths:
        - .

  x-attach: &attach-step
    attach_workspace:
      at: .

orbs:
  node: circleci/node@4.0.0

jobs:
  install-dependencies:
    <<: *work-dir
    docker:
      - image: circleci/node:14
    environment:
      HUSKY_SKIP_INSTALL: 1
    steps:
      - checkout
      - restore_cache:
          key: v1-deps-{{ checksum "yarn.lock" }}
      - run:
          name: Install dependencies
          command: yarn install --immutable
      - save_cache:
          key: v1-deps-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
      - *persist-step

  build:
    <<: *work-dir
    docker:
      - image: circleci/node:latest
    steps:
      - *attach-step
      - run:
          name: Build Project
          command: yarn build

  lint:
    <<: *work-dir
    docker:
      - image: circleci/node:14
    steps:
      - *attach-step
      - run:
          name: lint
          command: yarn lint

  test-node:
    parameters:
      node-version:
        type: string
    <<: *work-dir
    executor: node/default
    steps:
      - checkout
      - node/install:
          node-version: << parameters.node-version >>
          install-npm: false
      - run:
          name: Tests
          command: yarn test

  test-coverage:
    <<: *work-dir
    docker:
      - image: circleci/node:16
    steps:
      - *attach-step
      - run:
          name: Tests
          command: yarn test-with-coverage
      - store_test_results:
          path: coverage
        # Save workspace for subsequent (test)
      - persist_to_workspace:
          root: .
          paths:
            - .

  publish-coverage:
    <<: *work-dir
    docker:
      - image: circleci/node:latest
    steps:
      - *attach-step
      - run:
          name: Publish coverage
          command: yarn codecov -f coverage/*.json

  # e2e-linux:
  #   docker:
  #     - image: circleci/node:latest
  #   steps:
  #     - *attach-step
  #     - run:
  #         name: Create .env
  #         command: |
  #           touch .env
  #           echo "CORDE_TEST_TOKEN_LINUX=$CORDE_TEST_TOKEN_LINUX" > .env
  #           echo "BOT_TEST_ID_LINUX=$BOT_TEST_ID_LINUX" >> .env
  #           echo "CHANNEL_ID_LINUX=$CHANNEL_ID_LINUX" >> .env
  #           echo "GUILD_ID_LINUX=$GUILD_ID_LINUX" >> .env
  #           echo "BOT_TEST_TOKEN_LINUX=$BOT_TEST_TOKEN_LINUX" >> .env
  #           echo "CI_OS_ENV=linux" >> .env
  #     - run:
  #         name: Execute e2e tests
  #         command: yarn e2e linux

workflows:
  version: 2

  build-and-test:
    jobs:
      - install-dependencies:
          filters:
            branches:
              ignore: gh-pages

      - build:
          requires:
            - install-dependencies
          filters:
            branches:
              ignore: gh-pages

      - lint:
          requires:
            - build
          filters:
            branches:
              ignore: gh-pages

      - test-coverage:
          requires:
            - build
          filters:
            branches:
              ignore: gh-pages

      - publish-coverage:
          requires:
            - test-coverage
          filters:
            branches:
              ignore: gh-pages

      - test-node:
          matrix:
            parameters:
              node-version: ["14", "15"]

      # - e2e-linux:
      #     requires:
      #       - build
      #     filters:
      #       branches:
      #         ignore: gh-pages
