version: 2.1

references:
  x-workdir: &work-dir
    working_directory: ~/corde

  x-save-workspace: &persist-step
    persist_to_workspace:
      root: ~/corde
      paths:
        - .

  x-attach: &attach-step
    attach_workspace:
      at: .

executors:
  linux:
    docker:
      - image: cimg/base:2020.01

  macos:
    macos:
      xcode: 11.3.0

  windows:
    machine:
      image: windows-default # Windows machine image
    resource_class: small

orbs:
  node: circleci/node@2.0.0
  win: circleci/windows@2.2.0

jobs:
  install-dependencies:
    <<: *work-dir
    docker:
      - image: circleci/node:14
    environment:
      HUSKY_SKIP_INSTALL: 1
    steps:
      - checkout
      - restore_cache:
          key: v1-deps-{{ checksum "yarn.lock" }}
      - run:
          name: Install dependencies
          command: yarn install
      - save_cache:
          key: v1-deps-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
      - *persist-step

  build:
    <<: *work-dir
    docker:
      - image: circleci/node:latest
    steps:
      - *attach-step
      - run:
          name: Build Project
          command: yarn build

  lint:
    <<: *work-dir
    docker:
      - image: circleci/node:14
    steps:
      - *attach-step
      - run:
          name: lint
          command: yarn lint

  test:
    <<: *work-dir
    parameters:
      os:
        type: executor
      node-version:
        type: string
    executor: << parameters.os >>
    steps:
      - *attach-step
      - node/install:
          node-version: << parameters.node-version >>
      - run:
          name: Unit Tests
          command: yarn test

  test-coverage:
    <<: *work-dir
    docker:
      - image: circleci/node:16
    steps:
      - *attach-step
      - run:
          name: Tests
          command: yarn test-with-coverage
      - store_test_results:
          path: coverage
        # Save workspace for subsequent (test)
      - persist_to_workspace:
          root: .
          paths:
            - .

  publish_coverage:
    <<: *work-dir
    docker:
      - image: circleci/node:latest
    steps:
      - *attach-step
      - run:
          name: Publish coverage
          command: yarn codecov -f coverage/*.json

  # e2e:
  #   docker:
  #     - image: circleci/node:latest
  #   steps:
  #     - *attach-step
  #     - run:
  #         name: Create .env
  #         command: |
  #           touch .env
  #           echo "CORDE_TEST_TOKEN_LINUX=$CORDE_TEST_TOKEN_LINUX" > .env
  #           echo "BOT_TEST_ID_LINUX=$BOT_TEST_ID_LINUX" >> .env
  #           echo "CHANNEL_ID_LINUX=$CHANNEL_ID_LINUX" >> .env
  #           echo "GUILD_ID_LINUX=$GUILD_ID_LINUX" >> .env
  #           echo "BOT_TEST_TOKEN_LINUX=$BOT_TEST_TOKEN_LINUX" >> .env
  #           echo "CI_OS_ENV=linux" >> .env
  #     - run:
  #         name: Execute e2e tests
  #         command: yarn e2e linux

workflows:
  version: 2

  build-and-test:
    jobs:
      - install-dependencies:
          filters:
            branches:
              ignore: gh-pages

      - build:
          requires:
            - install-dependencies
          filters:
            branches:
              ignore: gh-pages

      - lint:
          requires:
            - build
          filters:
            branches:
              ignore: gh-pages

      - test:
          requires:
            - build
          matrix:
            parameters:
              os: [linux]
              # https://nodejs.org/en/download/releases
              node-version: ["14.9.0", "14.17.4", "15.14.0", "16.6.0"]

      - test-coverage:
          requires:
            - build
          filters:
            branches:
              ignore: gh-pages

      # - e2e:
      #     requires:
      #       - build
      #     filters:
      #       branches:
      #         ignore: gh-pages

      - publish-coverage:
          requires:
            - test-coverage
          filters:
            branches:
              ignore: gh-pages
